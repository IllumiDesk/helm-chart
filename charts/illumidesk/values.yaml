# IllumiDesk configuration values
# --------------------

## String to partially override illumidesk.fullname template (will maintain the release name)
##
# nameOverride:

## String to fully override illumidesk.fullname template
##
# fullnameOverride:

## Create and use roles and service accounts with Role Based Access Control (RBAC).
##
rbac:
  # Enables or disables
  enabled: true

## JupyterHub configuration
## ref: https://github.com/jupyterhub/zero-to-jupyterhub-k8s/blob/master/jupyterhub/values.yaml
##
jupyterhub:
  # JupyterHub's application settings
  # ref: https://github.com/jupyterhub/zero-to-jupyterhub-k8s/blob/master/jupyterhub/values.yaml
  hub:
    config:
      # Custom Authenticator to use generic Oauth2.0 with Jupyterhub
      GenericOAuthenticator:
        # Callback URL to return to the user after autohrization
        oauth_callback_url: ''
        # Authenticaton url to initiate oauth
        authorize_url: ''
        # The url that retrieves an access token at the completion of oauth
        token_url: ''
        # The url for retrieves user data with a completed access token
        userdata_url: ''
      JupyterHub:
        # Provide Authenticator class ta
        authenticator_class: generic-oauth
    # JupyterHub's database configuration. Defaults to "postgres" since other options, such as "sqlite-pvc",
    # require additional PVC configuration settings.
    # ref: https://zero-to-jupyterhub.readthedocs.io/en/stable/resources/reference.html#hub-db
    db:
      # Database type
      # ref: https://zero-to-jupyterhub.readthedocs.io/en/stable/resources/reference.html#hub-db-type
      type: postgres
    # Extra configuration options
    # ref: https://zero-to-jupyterhub.readthedocs.io/en/stable/resources/reference.html#hub-extraconfig
    extraConfig:
      # The logo that appears on the top right of the control panel and end-user notebooks with Jupyter Classic.
      logoConfig: |
        c.JupyterHub.logo_file = "/srv/jupyterhub/illumidesk-80.png"
    # The JupyterHub docker image
    # ref: https://zero-to-jupyterhub.readthedocs.io/en/stable/resources/reference.html#hub-image
    image:
      # The JupyterHub image namespace. If the docker registry should be specified if using something other than
      # DockerHub (docker.io).
      name: illumidesk/jupyterhub
      # The JupyterHub image tag
      tag: k8s-latest
      # Whether or not to always pull the image from the registry.
      pullPolicy: Always
    # Shuts down the end-user server (pod) when the user logs out.
    shutdownOnLogout: true
  # Settings for the JupyterHub proxy service. The proxy service is used to route users to their
  # pods and, if enabled, has the option to provide TLS termination.
  proxy:
    # TLS termination
    https:
      # Enables or disables TLS termination with the proxy
      enabled: true
    # Required proxy's secret token. Should be created before installing services with the helm chart.
    # You can create a secure 32 character token from your terminal with: openssl rand -hex 32
    secretToken: 'example'
    # Configuration of the proxy-public service
    # https://zero-to-jupyterhub.readthedocs.io/en/stable/resources/reference.html#proxy-service
    service:
      # The JupyterHub proxy service type. The sub-chart defaults to "LoadBalancer". However, the IllumiDesk
      # chart configures separate LoadBalancer that then connects to the JupyterHub proxy via ClusterIP or NodePort.
      type: ClusterIP
  # Single user server
  singleuser:
    # Default container command inherited from the jupyter/docker-stacks base image.
    # https://github.com/jupyter/docker-stacks/blob/master/base-notebook/start-singleuser.sh
    cmd: start-singleuser.sh
    # Single user server extra environment variables
    # ref: https://zero-to-jupyterhub.readthedocs.io/en/stable/resources/reference.html#singleuser-extraenv
    extraEnv:
      # If yes, Instructs the startup script to change the $NB_USER home directory owner and group to the
      # current value of $NB_UID and $NB_GID.
      CHOWN_HOME: 'yes'
      # The default editor for user's environment
      Editor: vim
    # The GID the hub process should be using when touching any volumes mounted.
    fsGid: 1000
    # The UID the hub process should be running as.
    uid: 1000
    # The single user notebook image. If using a registry other than DockerHub (docker.io), prepend the
    # registry's domain to the namespace. For example: quay.io/illumidesk/illumidesk-notebook.
    image:
      # The singleuser image namespace
      name: illumidesk/illumidesk-notebook
      # The singleuser image tag
      tag: latest
      # Specify whether or not to alwasy pull the singleuser image. This is useful for when the singleuser
      # image is updated using the same image tag, for example, the latest alias.
      pullPolicy: Always

## Postgres setup
## ref: https://github.com/bitnami/charts/tree/master/bitnami/postgresql
##
postgresql:
  # Enables or disables an in cluster postgres
  enabled: false
  # Provide Postgresql username
  postgresqlUsername: postgres
  # Provide Postgresql password if username is not defined, the default username will have this password
  postgresqlPostgresPassword: ''
  # Provide Postgresql password
  postgresqlPassword: ''
  # Provide in cluster database name
  postgresqlDatabase: 'illumidesk'

## DatadogHQ Agent
## https://github.com/DataDog/helm-charts/tree/master/charts/datadog
##
datadog:
  # Enables or disables the Datadog agent
  enabled: false
  # Datadog's configuration settings
  datadog:
    # API key for the DatadogHQ account
    apiKey: ''
    # Customer's site
    site: ''
    # The Kubernetes cluster name
    clusterName: ''
    # Logs configuration
    logs:
      # Enables or disables log collection
      enabled: true
      # If true, collects all logs from running containers.
      containerCollectAll: true
    # Datadog's cluster agent which acts as a proxy between Datadog's API and
    # node-based agents.
    # ref: https://docs.datadoghq.com/agent/cluster_agent/
    clusterAgent:
      # Enables or disables the cluster agent
      enabled: true
      token: ''
      # Metrics enables autoscaling workloads based off of Datadog metrics
      # ref: https://docs.datadoghq.com/agent/cluster_agent/external_metrics/
      metricsProvider:
        # Enables or disables external metrics with Datadog.
        enabled: true

## Application Load Balancer (ALB) ingress controller
## ref: https://github.com/kubernetes-sigs/aws-load-balancer-controller
##
albIngressController:
  # Enables or disables the aws-alb-ingress-controller
  enabled: false
  # Enables or disables the IAM role for service accounts. This option must be set to true
  # if the AWS ALB Ingress Controller is enabled, otherwise the aws-ingress-controller pod
  # won't have sufficient priviledges to create the ALB.
  # ref: https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html
  enableIRSA: false
  # You must create kube2iam arn with your IAM credentials in order to provide them to the alb ingress controller container
  # ref: https://github.com/jtblin/kube2iam
  kube2iam: ''
  # Specify the name of the cluster created in eks
  clusterName: ''
  # Specify the vpc-id of the vpc that corresponds to your cluster VPC
  clusterVPC: vpc-XXXXXXX
  # Specify the aws region that your cluster is deployed to
  awsRegion: ''

albIngress:
  # Enables or disables the aws-alb-ingress-controller
  enabled: false
  # The sub-domain that is used with the illumidesk.com address. For example, 'test.illumidesk.com' would create the
  # test.illumidesk.com host name for the ingress resource.
  host: test.illumidesk.com
  # These ingress annotations are used so that the ALB Ingress Controller can autodiscover and group ingress resources.
  # Note: Navigate to readme Configuration table for list of Alb Ingress Controller Annotations
  # ref: https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.1/examples/echo_server/#deploy-ingress-for-echoserver
  ingress:
    annotations: {}

## External DNS Service
## ref: https://github.com/bitnami/charts/tree/master/bitnami/external-dns
##
allowExternalDNS:
  # Enables or disables the external dns service.
  enabled: false
  # Enables or disables the IAM role for service accounts. If the external dns service
  # is enabled with AWS, then this must be set to true (enabled) so that the external-dns
  # pod has sufficient permissions to update DNS records with Route 53.
  # ref: https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html
  enableIRSA: false

## Ingress Nginx controller
## ref: https://github.com/kubernetes/ingress-nginx
##
nginxIngressController:
  # Enables or disables the nginx-ingress controller. The nginx-ingress contoller
  # is set up with AWS annotations by default. It also specifies the use of the "nlb"
  # load balancer type.
  enabled: false
  # provide the VPC cidr for the eks cluster
  # ref: https://docs.aws.amazon.com/vpc/latest/userguide/working-with-vpcs.html
  vpcCIDR: 192.168.0.0/16
  # provide certificate ARN from AWS ACM
  # ref: https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html
  certificateArn: ''

## Ingress resource
##
nginxIngress:
  # Enables or disables the ingress resource. By default, the ingress resource root path
  # is associated to the proxy-public endpoing from the JupyterHub public facing service endpoint.
  enabled: false
  # The sub-domain that is used with the illumidesk.com address. For example, 'test.illumidesk.com' would create the
  # test.illumidesk.com host name for the ingress resource.
  host: 'test.illumidesk.com'

## NFS service used to persist files for personal workspaces and to provide a shared file
## system used for the grader's exchange directory (release/fetch/submit folders).
##
allowNFS:
  enabled: false
  # Domain for the NFS Server
  server: ''
  # specify mount path
  path: /

## Keycloak service (used for Authentication)
##
keyCloak:
  # Enables or disables the keycloak service. If disabled, then ensure the
  # JupyterHub authenticator is not using Keycloak with the GenericOAuthenticator
  # class.
  enabled: false
  # provide database schema for keycloak
  db_schema: public
  # provide database user with access to keycloak schema objects
  db_user: keycloak
  # provide keycloak database name. This may require you to create the database name in your database instance
  db_database: keycloak
  # provide database domain name
  db_addr: ''
  # provide name of database vendor
  db_vendor: POSTGRES
  # database password
  db_password: ''
  # admin user name for keycloak service
  keycloak_user: admin
  # password for keycloak service
  keycloak_password: admin

## Grader setup service
##
graderSetupService:
  # Enables or disables the grader setup service
  enabled: false
  # The docker image to use for the grader setup service. If a registry other than
  # DockerHub is required (defaults to docker.io) the include the registy identifier
  # before the image name. For example:
  # k8s.gcr.io/<org-name>/<image-name:tag-name>
  graderSetupImage: illumidesk/grader-setup-app:latest
  # The docker image for the shared grader notebook. If a registry other than
  # DockerHub is required (defaults to docker.io) the include the registy identifier
  # before the image name. For example:
  # k8s.gcr.io/<org-name>/<image-name:tag-name>
  graderImage: illumidesk/grader-notebook:latest
